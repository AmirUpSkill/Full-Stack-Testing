# src/main/resources/application.yml

# --- Spring Datasource Configuration ---
spring:
  datasource:
    # Constructing the JDBC URL for Neon PostgreSQL
    # Format: jdbc:postgresql://<host>:<port>/<database>?<parameters>
    url: jdbc:postgresql://ep-shy-pine-a2wc38jq-pooler.eu-central-1.aws.neon.tech:5432/todo?sslmode=require
    
    # Database Credentials from Neon
    username: todo_owner
    password: npg_EShBFQka7qm1  # !!! WARNING: Hardcoding secrets is bad practice for production !!!
                               # We'll address secure credential management later (e.g., Env Vars, Secrets Manager)
                               # For this learning exercise, this is okay for now.
    
    # You usually don't need to specify the driver class name for standard databases
    # Spring Boot can often infer it from the URL and classpath dependencies
    # driver-class-name: org.postgresql.Driver 

  # --- JPA / Hibernate Configuration ---
  jpa:
    # Hibernate settings
    hibernate:
      # Database Schema management strategy:
      # 'none': No action. Database schema must exist. (Safest for Production)
      # 'validate': Validate the schema, make no changes.
      # 'update': Update the schema if necessary. (Use with caution, potential data loss)
      # 'create': Drop existing schema and create a new one on startup. (Loses data!)
      # 'create-drop': Create schema on startup, drop on shutdown. (Good for tests)
      # --- Let's start with 'update' for easier initial development ---
      ddl-auto: update 
      
    # Show SQL statements generated by Hibernate in the logs (useful for debugging)
    show-sql: true 
    
    # Additional Hibernate properties
    properties:
      hibernate:
        # Format the logged SQL to be more readable
        format_sql: true
        # Explicitly set the dialect (optional, but good practice)
        # dialect: org.hibernate.dialect.PostgreSQLDialect # Often inferred correctly

# --- Optional: Server Port Configuration ---
# server:
#   port: 8080 # Default port

# --- Optional: Application Name (good practice) ---
# spring:
#   application:
#     name: todo-list-service 